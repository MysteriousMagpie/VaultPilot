{"code":"/**\n * VaultPilot AI Panel\n *\n * Placeholder for the AI Panel component that will display agent status,\n * task queue, insights, and AI health monitoring.\n */\nimport { __awaiter } from \"tslib\";\nimport { Component } from 'obsidian';\nexport class AIPanel extends Component {\n    constructor(containerEl, plugin, workspace) {\n        super();\n        this.containerEl = containerEl;\n        this.plugin = plugin;\n        this.workspace = workspace;\n    }\n    onload() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.containerEl.empty();\n            this.containerEl.addClass('vp-ai-panel');\n            // Create placeholder content\n            const placeholder = this.containerEl.createEl('div', {\n                cls: 'vp-ai-panel-placeholder'\n            });\n            placeholder.createEl('h3', { text: 'AI Panel' });\n            placeholder.createEl('p', { text: 'AI status monitoring, task queue, and insights will be displayed here.' });\n            if (this.plugin.settings.debugMode) {\n                console.log('AIPanel placeholder loaded');\n            }\n        });\n    }\n    onunload() {\n        super.onunload();\n    }\n}\n//# sourceMappingURL=AIPanel.js.map","references":["/Users/malachiledbetter/Documents/GitHub/VaultPilot/vaultpilot/node_modules/obsidian/obsidian.d.ts","/Users/malachiledbetter/Documents/GitHub/VaultPilot/vaultpilot/src/main.ts","/Users/malachiledbetter/Documents/GitHub/VaultPilot/vaultpilot/src/workspace/WorkspaceManager.ts"],"map":"{\"version\":3,\"file\":\"AIPanel.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/workspace/panels/AIPanel.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;GAKG;;AAEH,OAAO,EAAE,SAAS,EAAE,MAAM,UAAU,CAAC;AAIrC,MAAM,OAAO,OAAQ,SAAQ,SAAS;IAKpC,YAAY,WAAwB,EAAE,MAAwB,EAAE,SAA2B;QACzF,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC7B,CAAC;IAEK,MAAM;;YACV,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;YACzB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;YAEzC,6BAA6B;YAC7B,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,EAAE;gBACnD,GAAG,EAAE,yBAAyB;aAC/B,CAAC,CAAC;YAEH,WAAW,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,CAAC;YACjD,WAAW,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,IAAI,EAAE,wEAAwE,EAAE,CAAC,CAAC;YAE9G,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;gBACnC,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;YAC5C,CAAC;QACH,CAAC;KAAA;IAED,QAAQ;QACN,KAAK,CAAC,QAAQ,EAAE,CAAC;IACnB,CAAC;CACF\",\"sourcesContent\":[\"/**\\n * VaultPilot AI Panel\\n * \\n * Placeholder for the AI Panel component that will display agent status,\\n * task queue, insights, and AI health monitoring.\\n */\\n\\nimport { Component } from 'obsidian';\\nimport VaultPilotPlugin from '../../main';\\nimport { WorkspaceManager } from '../WorkspaceManager';\\n\\nexport class AIPanel extends Component {\\n  private plugin: VaultPilotPlugin;\\n  private workspace: WorkspaceManager;\\n  private containerEl: HTMLElement;\\n\\n  constructor(containerEl: HTMLElement, plugin: VaultPilotPlugin, workspace: WorkspaceManager) {\\n    super();\\n    this.containerEl = containerEl;\\n    this.plugin = plugin;\\n    this.workspace = workspace;\\n  }\\n\\n  async onload(): Promise<void> {\\n    this.containerEl.empty();\\n    this.containerEl.addClass('vp-ai-panel');\\n    \\n    // Create placeholder content\\n    const placeholder = this.containerEl.createEl('div', {\\n      cls: 'vp-ai-panel-placeholder'\\n    });\\n    \\n    placeholder.createEl('h3', { text: 'AI Panel' });\\n    placeholder.createEl('p', { text: 'AI status monitoring, task queue, and insights will be displayed here.' });\\n    \\n    if (this.plugin.settings.debugMode) {\\n      console.log('AIPanel placeholder loaded');\\n    }\\n  }\\n\\n  onunload(): void {\\n    super.onunload();\\n  }\\n}\"]}"}
