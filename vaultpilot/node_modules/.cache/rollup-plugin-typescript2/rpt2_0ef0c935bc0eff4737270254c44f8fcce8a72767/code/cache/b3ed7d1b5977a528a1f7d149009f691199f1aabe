{"code":"import { __awaiter } from \"tslib\";\nimport { ItemView, Notice, TFolder } from 'obsidian';\nexport const VIEW_TYPE_VAULTPILOT_FULL_TAB = 'vaultpilot-full-tab-view';\nexport class VaultPilotFullTabView extends ItemView {\n    constructor(leaf, plugin) {\n        super(leaf);\n        this.plugin = plugin;\n    }\n    getViewType() {\n        return VIEW_TYPE_VAULTPILOT_FULL_TAB;\n    }\n    getDisplayText() {\n        return 'VaultPilot Dashboard';\n    }\n    getIcon() {\n        return 'layout-dashboard';\n    }\n    onOpen() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const container = this.containerEl;\n            container.empty();\n            container.addClass('vaultpilot-full-tab-view');\n            // Create main layout\n            const mainLayout = container.createEl('div', { cls: 'vaultpilot-main-layout' });\n            // Left sidebar\n            const leftSidebar = mainLayout.createEl('div', { cls: 'vaultpilot-left-sidebar' });\n            this.createLeftSidebar(leftSidebar);\n            // Main content area\n            const mainContent = mainLayout.createEl('div', { cls: 'vaultpilot-main-content' });\n            this.createMainContent(mainContent);\n            // Right sidebar\n            const rightSidebar = mainLayout.createEl('div', { cls: 'vaultpilot-right-sidebar' });\n            this.createRightSidebar(rightSidebar);\n            this.addFullTabStyles();\n        });\n    }\n    createLeftSidebar(sidebar) {\n        // Header\n        const headerEl = sidebar.createEl('div', { cls: 'vaultpilot-sidebar-header' });\n        headerEl.createEl('h2', { text: '🤖 VaultPilot' });\n        headerEl.createEl('p', {\n            text: 'AI Assistant Dashboard',\n            cls: 'vaultpilot-subtitle'\n        });\n        // Status section\n        this.statusEl = sidebar.createEl('div', { cls: 'vaultpilot-status' });\n        this.updateStatus();\n        // Quick actions\n        this.quickActionsEl = sidebar.createEl('div', { cls: 'vaultpilot-quick-actions' });\n        this.createQuickActions();\n        // Vault stats\n        this.vaultStatsEl = sidebar.createEl('div', { cls: 'vaultpilot-vault-stats' });\n        this.updateVaultStats();\n    }\n    createMainContent(content) {\n        // Tab navigation\n        const tabNav = content.createEl('div', { cls: 'vaultpilot-tab-nav' });\n        const chatTab = tabNav.createEl('button', {\n            text: '💬 Chat',\n            cls: 'vaultpilot-tab-button active'\n        });\n        const workflowTab = tabNav.createEl('button', {\n            text: '⚙️ Workflows',\n            cls: 'vaultpilot-tab-button'\n        });\n        const analyticsTab = tabNav.createEl('button', {\n            text: '📊 Analytics',\n            cls: 'vaultpilot-tab-button'\n        });\n        // Tab content\n        const tabContent = content.createEl('div', { cls: 'vaultpilot-tab-content' });\n        // Chat section\n        this.chatEl = tabContent.createEl('div', { cls: 'vaultpilot-chat-section active' });\n        this.createChatSection(this.chatEl);\n        // Workflow section\n        this.workflowEl = tabContent.createEl('div', { cls: 'vaultpilot-workflow-section' });\n        this.createWorkflowSection(this.workflowEl);\n        // Analytics section\n        const analyticsEl = tabContent.createEl('div', { cls: 'vaultpilot-analytics-section' });\n        this.createAnalyticsSection(analyticsEl);\n        // Tab switching\n        chatTab.onclick = () => this.switchTab('chat', chatTab);\n        workflowTab.onclick = () => this.switchTab('workflow', workflowTab);\n        analyticsTab.onclick = () => this.switchTab('analytics', analyticsTab);\n    }\n    createRightSidebar(sidebar) {\n        // Recent files\n        const recentFilesEl = sidebar.createEl('div', { cls: 'vaultpilot-recent-files' });\n        recentFilesEl.createEl('h3', { text: 'Recent Files' });\n        this.updateRecentFiles(recentFilesEl);\n        // Agent status\n        const agentStatusEl = sidebar.createEl('div', { cls: 'vaultpilot-agent-status' });\n        agentStatusEl.createEl('h3', { text: 'Agent Status' });\n        this.updateAgentStatus(agentStatusEl);\n        // Activity feed\n        const activityEl = sidebar.createEl('div', { cls: 'vaultpilot-activity-feed' });\n        activityEl.createEl('h3', { text: 'Activity Feed' });\n        this.createActivityFeed(activityEl);\n    }\n    createChatSection(chatEl) {\n        // Chat header\n        const chatHeader = chatEl.createEl('div', { cls: 'vaultpilot-chat-header' });\n        chatHeader.createEl('h3', { text: 'AI Chat Interface' });\n        // Chat history\n        const chatHistory = chatEl.createEl('div', { cls: 'vaultpilot-chat-history' });\n        chatHistory.createEl('div', {\n            text: 'Welcome! Start a conversation with your AI assistant.',\n            cls: 'vaultpilot-chat-welcome'\n        });\n        // Chat input\n        const chatInput = chatEl.createEl('div', { cls: 'vaultpilot-chat-input' });\n        const textarea = chatInput.createEl('textarea', {\n            placeholder: 'Type your message here...',\n            cls: 'vaultpilot-chat-textarea'\n        });\n        const sendButton = chatInput.createEl('button', {\n            text: 'Send',\n            cls: 'vaultpilot-chat-send-button'\n        });\n        sendButton.onclick = () => {\n            const message = textarea.value.trim();\n            if (message) {\n                this.sendChatMessage(message, chatHistory);\n                textarea.value = '';\n            }\n        };\n        // Handle Enter key\n        textarea.onkeydown = (e) => {\n            if (e.key === 'Enter' && !e.shiftKey) {\n                e.preventDefault();\n                sendButton.click();\n            }\n        };\n    }\n    createWorkflowSection(workflowEl) {\n        // Workflow header\n        const workflowHeader = workflowEl.createEl('div', { cls: 'vaultpilot-workflow-header' });\n        workflowHeader.createEl('h3', { text: 'Workflow Management' });\n        // Workflow grid container\n        const workflowContainer = workflowEl.createEl('div', { cls: 'vaultpilot-workflow-container' });\n        const workflowGrid = workflowContainer.createEl('div', { cls: 'vaultpilot-workflow-grid' });\n        // Predefined workflows\n        const workflows = [\n            { name: 'Analyze Vault', icon: '🔍', description: 'Analyze your vault structure and content' },\n            { name: 'Generate Summary', icon: '📝', description: 'Create summaries of your notes' },\n            { name: 'Link Analysis', icon: '🔗', description: 'Analyze note connections and relationships' },\n            { name: 'Tag Management', icon: '🏷️', description: 'Organize and manage your tags' },\n            { name: 'Daily Planning', icon: '📅', description: 'Plan your day based on your notes' },\n            { name: 'Knowledge Graph', icon: '🕸️', description: 'Visualize your knowledge connections' },\n            { name: 'Content Search', icon: '🔎', description: 'Advanced search across your vault' },\n            { name: 'Note Templates', icon: '📄', description: 'Create and manage note templates' }\n        ];\n        workflows.forEach(workflow => {\n            const workflowCard = workflowGrid.createEl('div', { cls: 'vaultpilot-workflow-card' });\n            workflowCard.createEl('div', { text: workflow.icon, cls: 'vaultpilot-workflow-icon' });\n            workflowCard.createEl('h4', { text: workflow.name });\n            workflowCard.createEl('p', { text: workflow.description });\n            const runButton = workflowCard.createEl('button', {\n                text: 'Run',\n                cls: 'vaultpilot-workflow-run-button'\n            });\n            runButton.onclick = () => this.runWorkflow(workflow.name);\n        });\n    }\n    createAnalyticsSection(analyticsEl) {\n        // Analytics header\n        const analyticsHeader = analyticsEl.createEl('div', { cls: 'vaultpilot-analytics-header' });\n        analyticsHeader.createEl('h3', { text: 'Vault Analytics' });\n        // Charts container\n        const chartsContainer = analyticsEl.createEl('div', { cls: 'vaultpilot-charts-container' });\n        // File type distribution\n        const fileTypeChart = chartsContainer.createEl('div', { cls: 'vaultpilot-chart-card' });\n        fileTypeChart.createEl('h4', { text: 'File Type Distribution' });\n        fileTypeChart.createEl('div', {\n            text: 'Chart visualization coming soon...',\n            cls: 'vaultpilot-chart-placeholder'\n        });\n        // Note creation timeline\n        const timelineChart = chartsContainer.createEl('div', { cls: 'vaultpilot-chart-card' });\n        timelineChart.createEl('h4', { text: 'Note Creation Timeline' });\n        timelineChart.createEl('div', {\n            text: 'Timeline visualization coming soon...',\n            cls: 'vaultpilot-chart-placeholder'\n        });\n        // Tag usage\n        const tagChart = chartsContainer.createEl('div', { cls: 'vaultpilot-chart-card' });\n        tagChart.createEl('h4', { text: 'Tag Usage' });\n        tagChart.createEl('div', {\n            text: 'Tag analytics coming soon...',\n            cls: 'vaultpilot-chart-placeholder'\n        });\n        // Word count analysis\n        const wordCountChart = chartsContainer.createEl('div', { cls: 'vaultpilot-chart-card' });\n        wordCountChart.createEl('h4', { text: 'Word Count Analysis' });\n        wordCountChart.createEl('div', {\n            text: 'Word count visualization coming soon...',\n            cls: 'vaultpilot-chart-placeholder'\n        });\n        // Link density\n        const linkChart = chartsContainer.createEl('div', { cls: 'vaultpilot-chart-card' });\n        linkChart.createEl('h4', { text: 'Link Density' });\n        linkChart.createEl('div', {\n            text: 'Link analysis coming soon...',\n            cls: 'vaultpilot-chart-placeholder'\n        });\n        // Activity heatmap\n        const activityChart = chartsContainer.createEl('div', { cls: 'vaultpilot-chart-card' });\n        activityChart.createEl('h4', { text: 'Activity Heatmap' });\n        activityChart.createEl('div', {\n            text: 'Activity heatmap coming soon...',\n            cls: 'vaultpilot-chart-placeholder'\n        });\n    }\n    switchTab(tabName, button) {\n        var _a;\n        // Remove active class from all tabs\n        this.containerEl.querySelectorAll('.vaultpilot-tab-button').forEach(btn => {\n            btn.removeClass('active');\n        });\n        this.containerEl.querySelectorAll('.vaultpilot-chat-section, .vaultpilot-workflow-section, .vaultpilot-analytics-section').forEach(section => {\n            section.removeClass('active');\n        });\n        // Add active class to clicked tab\n        button.addClass('active');\n        // Show corresponding content\n        if (tabName === 'chat') {\n            this.chatEl.addClass('active');\n        }\n        else if (tabName === 'workflow') {\n            this.workflowEl.addClass('active');\n        }\n        else if (tabName === 'analytics') {\n            (_a = this.containerEl.querySelector('.vaultpilot-analytics-section')) === null || _a === void 0 ? void 0 : _a.addClass('active');\n        }\n    }\n    sendChatMessage(message, chatHistory) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Add user message\n            const userMessage = chatHistory.createEl('div', { cls: 'vaultpilot-chat-message user' });\n            userMessage.createEl('div', { text: message });\n            // Add thinking indicator\n            const thinkingMessage = chatHistory.createEl('div', { cls: 'vaultpilot-chat-message assistant thinking' });\n            thinkingMessage.createEl('div', { text: 'Thinking...' });\n            // Scroll to bottom\n            chatHistory.scrollTop = chatHistory.scrollHeight;\n            try {\n                const response = yield this.plugin.apiClient.sendChat({ message, context: null });\n                // Remove thinking indicator\n                thinkingMessage.remove();\n                if (response.success && response.data) {\n                    const assistantMessage = chatHistory.createEl('div', { cls: 'vaultpilot-chat-message assistant' });\n                    assistantMessage.createEl('div', { text: response.data.response });\n                }\n                else {\n                    const errorMessage = chatHistory.createEl('div', { cls: 'vaultpilot-chat-message error' });\n                    errorMessage.createEl('div', { text: 'Error: Could not get response from AI' });\n                }\n            }\n            catch (error) {\n                // Remove thinking indicator\n                thinkingMessage.remove();\n                const errorMessage = chatHistory.createEl('div', { cls: 'vaultpilot-chat-message error' });\n                errorMessage.createEl('div', { text: 'Error: Connection failed' });\n            }\n            // Scroll to bottom\n            chatHistory.scrollTop = chatHistory.scrollHeight;\n        });\n    }\n    runWorkflow(workflowName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            new Notice(`Running workflow: ${workflowName}`);\n            try {\n                // Map workflow names to appropriate actions\n                switch (workflowName) {\n                    case 'Analyze Vault':\n                        yield this.plugin.analyzeVault();\n                        break;\n                    case 'Daily Planning':\n                        yield this.plugin.planMyDay();\n                        break;\n                    default:\n                        // For now, show a placeholder\n                        new Notice(`${workflowName} workflow is coming soon!`);\n                }\n            }\n            catch (error) {\n                new Notice(`Error running workflow: ${workflowName}`);\n            }\n        });\n    }\n    updateStatus() {\n        this.statusEl.empty();\n        this.statusEl.createEl('h3', { text: 'Connection Status' });\n        const statusContainer = this.statusEl.createEl('div', { cls: 'vaultpilot-status-container' });\n        // Backend status\n        const backendStatus = statusContainer.createEl('div', { cls: 'vaultpilot-status-item' });\n        backendStatus.createEl('span', { text: 'Backend: ' });\n        const backendIndicator = backendStatus.createEl('span', {\n            cls: 'vaultpilot-status-indicator',\n            text: 'Checking...'\n        });\n        // WebSocket status\n        const wsStatus = statusContainer.createEl('div', { cls: 'vaultpilot-status-item' });\n        wsStatus.createEl('span', { text: 'WebSocket: ' });\n        const wsIndicator = wsStatus.createEl('span', {\n            cls: 'vaultpilot-status-indicator',\n            text: this.plugin.isWebSocketConnected() ? '🟢 Connected' : '🔴 Disconnected'\n        });\n        // Check backend status\n        this.checkBackendStatus(backendIndicator);\n    }\n    checkBackendStatus(indicator) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                let response = yield this.plugin.apiClient.healthCheck();\n                if (!response.success && ((_a = response.error) === null || _a === void 0 ? void 0 : _a.includes('400'))) {\n                    const simpleResponse = yield this.plugin.apiClient.simpleHealthCheck();\n                    if (simpleResponse.success && simpleResponse.data) {\n                        response = {\n                            success: true,\n                            data: { status: simpleResponse.data.status, version: 'unknown' }\n                        };\n                    }\n                }\n                if (response.success) {\n                    indicator.textContent = '🟢 Connected';\n                    indicator.className = 'vaultpilot-status-indicator vaultpilot-status-connected';\n                }\n                else {\n                    indicator.textContent = '🔴 Error';\n                    indicator.className = 'vaultpilot-status-indicator vaultpilot-status-error';\n                }\n            }\n            catch (error) {\n                indicator.textContent = '🔴 Offline';\n                indicator.className = 'vaultpilot-status-indicator vaultpilot-status-offline';\n            }\n        });\n    }\n    createQuickActions() {\n        this.quickActionsEl.empty();\n        this.quickActionsEl.createEl('h3', { text: 'Quick Actions' });\n        const actionsGrid = this.quickActionsEl.createEl('div', { cls: 'vaultpilot-actions-grid' });\n        // Refresh button\n        const refreshButton = actionsGrid.createEl('button', {\n            text: '🔄 Refresh',\n            cls: 'vaultpilot-action-button'\n        });\n        refreshButton.onclick = () => {\n            this.updateStatus();\n            this.updateVaultStats();\n        };\n        // Open sidebar view\n        const sidebarButton = actionsGrid.createEl('button', {\n            text: '📋 Sidebar View',\n            cls: 'vaultpilot-action-button'\n        });\n        sidebarButton.onclick = () => this.plugin.activateView();\n        // Open modal chat\n        const modalChatButton = actionsGrid.createEl('button', {\n            text: '💬 Modal Chat',\n            cls: 'vaultpilot-action-button'\n        });\n        modalChatButton.onclick = () => this.plugin.openChatModal();\n        // Execute workflow\n        const workflowButton = actionsGrid.createEl('button', {\n            text: '⚙️ Workflows',\n            cls: 'vaultpilot-action-button'\n        });\n        workflowButton.onclick = () => this.plugin.openWorkflowModal();\n    }\n    updateVaultStats() {\n        this.vaultStatsEl.empty();\n        this.vaultStatsEl.createEl('h3', { text: 'Vault Statistics' });\n        const statsContainer = this.vaultStatsEl.createEl('div', { cls: 'vaultpilot-stats-container' });\n        // Get vault statistics\n        const files = this.app.vault.getFiles();\n        const markdownFiles = this.app.vault.getMarkdownFiles();\n        const stats = [\n            { label: 'Total Files', value: files.length.toString() },\n            { label: 'Markdown Files', value: markdownFiles.length.toString() },\n            { label: 'Folders', value: this.app.vault.getAllLoadedFiles().filter(f => f instanceof TFolder).length.toString() }\n        ];\n        stats.forEach(stat => {\n            const statEl = statsContainer.createEl('div', { cls: 'vaultpilot-stat-item' });\n            statEl.createEl('div', { text: stat.value, cls: 'vaultpilot-stat-value' });\n            statEl.createEl('div', { text: stat.label, cls: 'vaultpilot-stat-label' });\n        });\n    }\n    updateRecentFiles(container) {\n        const recentFiles = this.app.vault.getMarkdownFiles()\n            .sort((a, b) => b.stat.mtime - a.stat.mtime)\n            .slice(0, 5);\n        recentFiles.forEach(file => {\n            const fileEl = container.createEl('div', { cls: 'vaultpilot-recent-file' });\n            fileEl.createEl('span', { text: file.basename });\n            fileEl.onclick = () => {\n                this.app.workspace.openLinkText(file.path, '', false);\n            };\n        });\n    }\n    updateAgentStatus(container) {\n        this.loadAgentInfo(container);\n    }\n    loadAgentInfo(container) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                console.log('VaultPilot: Loading agents in full-tab-view...');\n                const response = yield this.plugin.apiClient.getAgents();\n                console.log('VaultPilot: getAgents response in full-tab-view:', response);\n                if (response.success && response.data && container) {\n                    let agents = [];\n                    // Handle different response formats\n                    if (Array.isArray(response.data)) {\n                        // Direct array response\n                        agents = response.data;\n                    }\n                    else if (response.data && typeof response.data === 'object') {\n                        // Check for wrapped response formats\n                        const dataObj = response.data;\n                        if (dataObj.agents && Array.isArray(dataObj.agents)) {\n                            // Response format: {agents: [...]}\n                            agents = dataObj.agents;\n                            console.log('VaultPilot: Found agents array in full-tab-view, using response.data.agents');\n                        }\n                        else if (dataObj.data && Array.isArray(dataObj.data)) {\n                            // Response format: {data: [...]}\n                            agents = dataObj.data;\n                            console.log('VaultPilot: Found nested data in full-tab-view, using response.data.data');\n                        }\n                        else {\n                            console.warn('VaultPilot: Unexpected response format:', typeof response.data, response.data);\n                        }\n                    }\n                    // Display agent information\n                    const agentCount = agents.length;\n                    const activeAgents = agents.filter((agent) => agent.active).length;\n                    const agentInfo = container.createEl('div', { cls: 'vaultpilot-agent-info' });\n                    agentInfo.createEl('div', { text: `${activeAgents}/${agentCount} active` });\n                    agents.forEach((agent) => {\n                        const agentEl = agentInfo.createEl('div', { cls: 'vaultpilot-agent-item' });\n                        agentEl.createEl('span', { text: agent.name });\n                        agentEl.createEl('span', {\n                            text: agent.active ? '🟢' : '🔴',\n                            cls: 'vaultpilot-agent-status'\n                        });\n                    });\n                }\n            }\n            catch (error) {\n                console.error('Failed to load agents in full tab view:', error);\n            }\n        });\n    }\n    createActivityFeed(container) {\n        const activities = [\n            { time: 'Just now', activity: 'VaultPilot started' },\n            { time: '5 min ago', activity: 'Connection established' },\n            { time: '1 hour ago', activity: 'Last vault analysis' }\n        ];\n        activities.forEach(activity => {\n            const activityEl = container.createEl('div', { cls: 'vaultpilot-activity-item' });\n            activityEl.createEl('div', { text: activity.activity });\n            activityEl.createEl('div', { text: activity.time, cls: 'vaultpilot-activity-time' });\n        });\n    }\n    addFullTabStyles() {\n        if (!document.getElementById('vaultpilot-full-tab-styles')) {\n            const styleEl = document.createElement('style');\n            styleEl.id = 'vaultpilot-full-tab-styles';\n            styleEl.textContent = `\n        .vaultpilot-full-tab-view {\n          height: 100%;\n          display: flex;\n          flex-direction: column;\n        }\n        .vaultpilot-main-layout {\n          display: flex;\n          height: 100%;\n          gap: 1px;\n          background: var(--background-modifier-border);\n        }\n        .vaultpilot-left-sidebar {\n          width: 250px;\n          background: var(--background-primary);\n          padding: 16px;\n          overflow-y: auto;\n        }\n        .vaultpilot-main-content {\n          flex: 1;\n          background: var(--background-primary);\n          display: flex;\n          flex-direction: column;\n        }\n        .vaultpilot-right-sidebar {\n          width: 250px;\n          background: var(--background-primary);\n          padding: 16px;\n          overflow-y: auto;\n        }\n        .vaultpilot-sidebar-header {\n          text-align: center;\n          margin-bottom: 20px;\n          padding-bottom: 15px;\n          border-bottom: 1px solid var(--background-modifier-border);\n        }\n        .vaultpilot-tab-nav {\n          display: flex;\n          background: var(--background-secondary);\n          border-bottom: 1px solid var(--background-modifier-border);\n        }\n        .vaultpilot-tab-button {\n          flex: 1;\n          padding: 12px 16px;\n          background: transparent;\n          border: none;\n          color: var(--text-muted);\n          cursor: pointer;\n          transition: all 0.2s;\n        }\n        .vaultpilot-tab-button:hover {\n          background: var(--background-modifier-hover);\n        }\n        .vaultpilot-tab-button.active {\n          background: var(--background-primary);\n          color: var(--text-normal);\n          border-bottom: 2px solid var(--interactive-accent);\n        }\n        .vaultpilot-tab-content {\n          flex: 1;\n          overflow: hidden;\n          position: relative;\n        }\n        .vaultpilot-chat-section,\n        .vaultpilot-workflow-section,\n        .vaultpilot-analytics-section {\n          height: 100%;\n          padding: 16px;\n          display: none;\n          overflow-y: auto;\n          position: absolute;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n        }\n        .vaultpilot-chat-section.active,\n        .vaultpilot-workflow-section.active,\n        .vaultpilot-analytics-section.active {\n          display: flex;\n          flex-direction: column;\n        }\n        .vaultpilot-chat-history {\n          flex: 1;\n          overflow-y: auto;\n          border: 1px solid var(--background-modifier-border);\n          border-radius: 8px;\n          padding: 16px;\n          margin-bottom: 16px;\n          background: var(--background-secondary);\n        }\n        .vaultpilot-chat-input {\n          display: flex;\n          gap: 8px;\n        }\n        .vaultpilot-chat-textarea {\n          flex: 1;\n          min-height: 60px;\n          padding: 8px;\n          border: 1px solid var(--background-modifier-border);\n          border-radius: 6px;\n          background: var(--background-primary);\n          color: var(--text-normal);\n          resize: vertical;\n        }\n        .vaultpilot-chat-send-button {\n          padding: 8px 16px;\n          background: var(--interactive-accent);\n          color: var(--text-on-accent);\n          border: none;\n          border-radius: 6px;\n          cursor: pointer;\n          height: fit-content;\n          align-self: flex-end;\n        }\n        .vaultpilot-chat-message {\n          margin-bottom: 12px;\n          padding: 8px 12px;\n          border-radius: 8px;\n          max-width: 80%;\n        }\n        .vaultpilot-chat-message.user {\n          background: var(--interactive-accent);\n          color: var(--text-on-accent);\n          margin-left: auto;\n        }\n        .vaultpilot-chat-message.assistant {\n          background: var(--background-primary);\n          border: 1px solid var(--background-modifier-border);\n        }\n        .vaultpilot-chat-message.thinking {\n          opacity: 0.7;\n          font-style: italic;\n        }\n        .vaultpilot-chat-message.error {\n          background: var(--background-modifier-error);\n          color: var(--text-error);\n        }\n        .vaultpilot-workflow-section,\n        .vaultpilot-analytics-section {\n          gap: 16px;\n        }\n        .vaultpilot-workflow-header,\n        .vaultpilot-analytics-header {\n          flex-shrink: 0;\n        }\n        .vaultpilot-workflow-container,\n        .vaultpilot-charts-container {\n          flex: 1;\n          overflow-y: auto;\n        }\n        .vaultpilot-workflow-grid {\n          display: grid;\n          grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n          gap: 16px;\n          align-content: start;\n        }\n        .vaultpilot-workflow-card {\n          background: var(--background-secondary);\n          border: 1px solid var(--background-modifier-border);\n          border-radius: 8px;\n          padding: 16px;\n          text-align: center;\n        }\n        .vaultpilot-workflow-icon {\n          font-size: 32px;\n          margin-bottom: 8px;\n        }\n        .vaultpilot-workflow-run-button {\n          margin-top: 8px;\n          padding: 6px 12px;\n          background: var(--interactive-accent);\n          color: var(--text-on-accent);\n          border: none;\n          border-radius: 4px;\n          cursor: pointer;\n        }\n        .vaultpilot-charts-container {\n          display: grid;\n          grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n          gap: 16px;\n          align-content: start;\n        }\n        .vaultpilot-chart-card {\n          background: var(--background-secondary);\n          border: 1px solid var(--background-modifier-border);\n          border-radius: 8px;\n          padding: 16px;\n        }\n        .vaultpilot-chart-placeholder {\n          text-align: center;\n          color: var(--text-muted);\n          font-style: italic;\n          padding: 40px;\n        }\n        .vaultpilot-recent-file {\n          padding: 4px 8px;\n          margin-bottom: 4px;\n          border-radius: 4px;\n          cursor: pointer;\n          transition: background-color 0.2s;\n        }\n        .vaultpilot-recent-file:hover {\n          background: var(--background-modifier-hover);\n        }\n        .vaultpilot-agent-item {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          padding: 4px 0;\n        }\n        .vaultpilot-activity-item {\n          margin-bottom: 8px;\n          padding: 6px 0;\n          border-bottom: 1px solid var(--background-modifier-border);\n        }\n        .vaultpilot-activity-time {\n          font-size: 11px;\n          color: var(--text-muted);\n          margin-top: 2px;\n        }\n        /* Inherit styles from original view */\n        .vaultpilot-status,\n        .vaultpilot-quick-actions,\n        .vaultpilot-vault-stats {\n          margin-bottom: 20px;\n        }\n        .vaultpilot-status h3,\n        .vaultpilot-quick-actions h3,\n        .vaultpilot-vault-stats h3 {\n          margin-bottom: 12px;\n          color: var(--text-normal);\n          border-bottom: 1px solid var(--background-modifier-border);\n          padding-bottom: 4px;\n          font-size: 14px;\n        }\n        .vaultpilot-status-container {\n          display: flex;\n          flex-direction: column;\n          gap: 6px;\n        }\n        .vaultpilot-status-item {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          font-size: 12px;\n        }\n        .vaultpilot-status-indicator {\n          font-weight: 500;\n          font-size: 11px;\n        }\n        .vaultpilot-status-connected {\n          color: var(--color-green);\n        }\n        .vaultpilot-status-error,\n        .vaultpilot-status-offline {\n          color: var(--color-red);\n        }\n        .vaultpilot-actions-grid {\n          display: grid;\n          grid-template-columns: 1fr 1fr;\n          gap: 8px;\n        }\n        .vaultpilot-action-button {\n          padding: 8px 6px;\n          background: var(--interactive-normal);\n          border: 1px solid var(--background-modifier-border);\n          border-radius: 4px;\n          color: var(--text-normal);\n          cursor: pointer;\n          font-size: 11px;\n          transition: background-color 0.2s;\n        }\n        .vaultpilot-action-button:hover {\n          background: var(--interactive-hover);\n        }\n        .vaultpilot-stats-container {\n          display: grid;\n          grid-template-columns: 1fr;\n          gap: 8px;\n        }\n        .vaultpilot-stat-item {\n          text-align: center;\n          padding: 8px;\n          background: var(--background-secondary);\n          border-radius: 4px;\n          border: 1px solid var(--background-modifier-border);\n        }\n        .vaultpilot-stat-value {\n          font-size: 18px;\n          font-weight: bold;\n          color: var(--text-accent);\n          margin-bottom: 2px;\n        }\n        .vaultpilot-stat-label {\n          font-size: 10px;\n          color: var(--text-muted);\n        }\n      `;\n            document.head.appendChild(styleEl);\n        }\n    }\n    onClose() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Clean up any resources\n        });\n    }\n}\n//# sourceMappingURL=full-tab-view.js.map","references":["/Users/malachiledbetter/Documents/GitHub/VaultPilot/vaultpilot/node_modules/obsidian/obsidian.d.ts","/Users/malachiledbetter/Documents/GitHub/VaultPilot/vaultpilot/src/main.ts"],"map":"{\"version\":3,\"file\":\"full-tab-view.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/full-tab-view.ts\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"import { ItemView, WorkspaceLeaf, Notice, MarkdownView, TFolder } from 'obsidian';\\nimport type VaultPilotPlugin from './main';\\n\\nexport const VIEW_TYPE_VAULTPILOT_FULL_TAB = 'vaultpilot-full-tab-view';\\n\\nexport class VaultPilotFullTabView extends ItemView {\\n  plugin: VaultPilotPlugin;\\n  private statusEl!: HTMLElement;\\n  private quickActionsEl!: HTMLElement;\\n  private vaultStatsEl!: HTMLElement;\\n  private chatEl!: HTMLElement;\\n  private workflowEl!: HTMLElement;\\n\\n  constructor(leaf: WorkspaceLeaf, plugin: VaultPilotPlugin) {\\n    super(leaf);\\n    this.plugin = plugin;\\n  }\\n\\n  getViewType(): string {\\n    return VIEW_TYPE_VAULTPILOT_FULL_TAB;\\n  }\\n\\n  getDisplayText(): string {\\n    return 'VaultPilot Dashboard';\\n  }\\n\\n  getIcon(): string {\\n    return 'layout-dashboard';\\n  }\\n\\n  async onOpen() {\\n    const container = this.containerEl;\\n    container.empty();\\n    container.addClass('vaultpilot-full-tab-view');\\n\\n    // Create main layout\\n    const mainLayout = container.createEl('div', { cls: 'vaultpilot-main-layout' });\\n\\n    // Left sidebar\\n    const leftSidebar = mainLayout.createEl('div', { cls: 'vaultpilot-left-sidebar' });\\n    this.createLeftSidebar(leftSidebar);\\n\\n    // Main content area\\n    const mainContent = mainLayout.createEl('div', { cls: 'vaultpilot-main-content' });\\n    this.createMainContent(mainContent);\\n\\n    // Right sidebar\\n    const rightSidebar = mainLayout.createEl('div', { cls: 'vaultpilot-right-sidebar' });\\n    this.createRightSidebar(rightSidebar);\\n\\n    this.addFullTabStyles();\\n  }\\n\\n  private createLeftSidebar(sidebar: HTMLElement) {\\n    // Header\\n    const headerEl = sidebar.createEl('div', { cls: 'vaultpilot-sidebar-header' });\\n    headerEl.createEl('h2', { text: '🤖 VaultPilot' });\\n    headerEl.createEl('p', { \\n      text: 'AI Assistant Dashboard',\\n      cls: 'vaultpilot-subtitle'\\n    });\\n\\n    // Status section\\n    this.statusEl = sidebar.createEl('div', { cls: 'vaultpilot-status' });\\n    this.updateStatus();\\n\\n    // Quick actions\\n    this.quickActionsEl = sidebar.createEl('div', { cls: 'vaultpilot-quick-actions' });\\n    this.createQuickActions();\\n\\n    // Vault stats\\n    this.vaultStatsEl = sidebar.createEl('div', { cls: 'vaultpilot-vault-stats' });\\n    this.updateVaultStats();\\n  }\\n\\n  private createMainContent(content: HTMLElement) {\\n    // Tab navigation\\n    const tabNav = content.createEl('div', { cls: 'vaultpilot-tab-nav' });\\n    const chatTab = tabNav.createEl('button', { \\n      text: '💬 Chat', \\n      cls: 'vaultpilot-tab-button active'\\n    });\\n    const workflowTab = tabNav.createEl('button', { \\n      text: '⚙️ Workflows', \\n      cls: 'vaultpilot-tab-button'\\n    });\\n    const analyticsTab = tabNav.createEl('button', { \\n      text: '📊 Analytics', \\n      cls: 'vaultpilot-tab-button'\\n    });\\n\\n    // Tab content\\n    const tabContent = content.createEl('div', { cls: 'vaultpilot-tab-content' });\\n\\n    // Chat section\\n    this.chatEl = tabContent.createEl('div', { cls: 'vaultpilot-chat-section active' });\\n    this.createChatSection(this.chatEl);\\n\\n    // Workflow section\\n    this.workflowEl = tabContent.createEl('div', { cls: 'vaultpilot-workflow-section' });\\n    this.createWorkflowSection(this.workflowEl);\\n\\n    // Analytics section\\n    const analyticsEl = tabContent.createEl('div', { cls: 'vaultpilot-analytics-section' });\\n    this.createAnalyticsSection(analyticsEl);\\n\\n    // Tab switching\\n    chatTab.onclick = () => this.switchTab('chat', chatTab);\\n    workflowTab.onclick = () => this.switchTab('workflow', workflowTab);\\n    analyticsTab.onclick = () => this.switchTab('analytics', analyticsTab);\\n  }\\n\\n  private createRightSidebar(sidebar: HTMLElement) {\\n    // Recent files\\n    const recentFilesEl = sidebar.createEl('div', { cls: 'vaultpilot-recent-files' });\\n    recentFilesEl.createEl('h3', { text: 'Recent Files' });\\n    this.updateRecentFiles(recentFilesEl);\\n\\n    // Agent status\\n    const agentStatusEl = sidebar.createEl('div', { cls: 'vaultpilot-agent-status' });\\n    agentStatusEl.createEl('h3', { text: 'Agent Status' });\\n    this.updateAgentStatus(agentStatusEl);\\n\\n    // Activity feed\\n    const activityEl = sidebar.createEl('div', { cls: 'vaultpilot-activity-feed' });\\n    activityEl.createEl('h3', { text: 'Activity Feed' });\\n    this.createActivityFeed(activityEl);\\n  }\\n\\n  private createChatSection(chatEl: HTMLElement) {\\n    // Chat header\\n    const chatHeader = chatEl.createEl('div', { cls: 'vaultpilot-chat-header' });\\n    chatHeader.createEl('h3', { text: 'AI Chat Interface' });\\n\\n    // Chat history\\n    const chatHistory = chatEl.createEl('div', { cls: 'vaultpilot-chat-history' });\\n    chatHistory.createEl('div', { \\n      text: 'Welcome! Start a conversation with your AI assistant.',\\n      cls: 'vaultpilot-chat-welcome'\\n    });\\n\\n    // Chat input\\n    const chatInput = chatEl.createEl('div', { cls: 'vaultpilot-chat-input' });\\n    const textarea = chatInput.createEl('textarea', { \\n      placeholder: 'Type your message here...',\\n      cls: 'vaultpilot-chat-textarea'\\n    });\\n    \\n    const sendButton = chatInput.createEl('button', { \\n      text: 'Send',\\n      cls: 'vaultpilot-chat-send-button'\\n    });\\n\\n    sendButton.onclick = () => {\\n      const message = textarea.value.trim();\\n      if (message) {\\n        this.sendChatMessage(message, chatHistory);\\n        textarea.value = '';\\n      }\\n    };\\n\\n    // Handle Enter key\\n    textarea.onkeydown = (e) => {\\n      if (e.key === 'Enter' && !e.shiftKey) {\\n        e.preventDefault();\\n        sendButton.click();\\n      }\\n    };\\n  }\\n\\n  private createWorkflowSection(workflowEl: HTMLElement) {\\n    // Workflow header\\n    const workflowHeader = workflowEl.createEl('div', { cls: 'vaultpilot-workflow-header' });\\n    workflowHeader.createEl('h3', { text: 'Workflow Management' });\\n\\n    // Workflow grid container\\n    const workflowContainer = workflowEl.createEl('div', { cls: 'vaultpilot-workflow-container' });\\n    const workflowGrid = workflowContainer.createEl('div', { cls: 'vaultpilot-workflow-grid' });\\n\\n    // Predefined workflows\\n    const workflows = [\\n      { name: 'Analyze Vault', icon: '🔍', description: 'Analyze your vault structure and content' },\\n      { name: 'Generate Summary', icon: '📝', description: 'Create summaries of your notes' },\\n      { name: 'Link Analysis', icon: '🔗', description: 'Analyze note connections and relationships' },\\n      { name: 'Tag Management', icon: '🏷️', description: 'Organize and manage your tags' },\\n      { name: 'Daily Planning', icon: '📅', description: 'Plan your day based on your notes' },\\n      { name: 'Knowledge Graph', icon: '🕸️', description: 'Visualize your knowledge connections' },\\n      { name: 'Content Search', icon: '🔎', description: 'Advanced search across your vault' },\\n      { name: 'Note Templates', icon: '📄', description: 'Create and manage note templates' }\\n    ];\\n\\n    workflows.forEach(workflow => {\\n      const workflowCard = workflowGrid.createEl('div', { cls: 'vaultpilot-workflow-card' });\\n      workflowCard.createEl('div', { text: workflow.icon, cls: 'vaultpilot-workflow-icon' });\\n      workflowCard.createEl('h4', { text: workflow.name });\\n      workflowCard.createEl('p', { text: workflow.description });\\n      \\n      const runButton = workflowCard.createEl('button', { \\n        text: 'Run',\\n        cls: 'vaultpilot-workflow-run-button'\\n      });\\n      \\n      runButton.onclick = () => this.runWorkflow(workflow.name);\\n    });\\n  }\\n\\n  private createAnalyticsSection(analyticsEl: HTMLElement) {\\n    // Analytics header\\n    const analyticsHeader = analyticsEl.createEl('div', { cls: 'vaultpilot-analytics-header' });\\n    analyticsHeader.createEl('h3', { text: 'Vault Analytics' });\\n\\n    // Charts container\\n    const chartsContainer = analyticsEl.createEl('div', { cls: 'vaultpilot-charts-container' });\\n    \\n    // File type distribution\\n    const fileTypeChart = chartsContainer.createEl('div', { cls: 'vaultpilot-chart-card' });\\n    fileTypeChart.createEl('h4', { text: 'File Type Distribution' });\\n    fileTypeChart.createEl('div', { \\n      text: 'Chart visualization coming soon...',\\n      cls: 'vaultpilot-chart-placeholder'\\n    });\\n\\n    // Note creation timeline\\n    const timelineChart = chartsContainer.createEl('div', { cls: 'vaultpilot-chart-card' });\\n    timelineChart.createEl('h4', { text: 'Note Creation Timeline' });\\n    timelineChart.createEl('div', { \\n      text: 'Timeline visualization coming soon...',\\n      cls: 'vaultpilot-chart-placeholder'\\n    });\\n\\n    // Tag usage\\n    const tagChart = chartsContainer.createEl('div', { cls: 'vaultpilot-chart-card' });\\n    tagChart.createEl('h4', { text: 'Tag Usage' });\\n    tagChart.createEl('div', { \\n      text: 'Tag analytics coming soon...',\\n      cls: 'vaultpilot-chart-placeholder'\\n    });\\n\\n    // Word count analysis\\n    const wordCountChart = chartsContainer.createEl('div', { cls: 'vaultpilot-chart-card' });\\n    wordCountChart.createEl('h4', { text: 'Word Count Analysis' });\\n    wordCountChart.createEl('div', { \\n      text: 'Word count visualization coming soon...',\\n      cls: 'vaultpilot-chart-placeholder'\\n    });\\n\\n    // Link density\\n    const linkChart = chartsContainer.createEl('div', { cls: 'vaultpilot-chart-card' });\\n    linkChart.createEl('h4', { text: 'Link Density' });\\n    linkChart.createEl('div', { \\n      text: 'Link analysis coming soon...',\\n      cls: 'vaultpilot-chart-placeholder'\\n    });\\n\\n    // Activity heatmap\\n    const activityChart = chartsContainer.createEl('div', { cls: 'vaultpilot-chart-card' });\\n    activityChart.createEl('h4', { text: 'Activity Heatmap' });\\n    activityChart.createEl('div', { \\n      text: 'Activity heatmap coming soon...',\\n      cls: 'vaultpilot-chart-placeholder'\\n    });\\n  }\\n\\n  private switchTab(tabName: string, button: HTMLElement) {\\n    // Remove active class from all tabs\\n    this.containerEl.querySelectorAll('.vaultpilot-tab-button').forEach(btn => {\\n      btn.removeClass('active');\\n    });\\n    this.containerEl.querySelectorAll('.vaultpilot-chat-section, .vaultpilot-workflow-section, .vaultpilot-analytics-section').forEach(section => {\\n      section.removeClass('active');\\n    });\\n\\n    // Add active class to clicked tab\\n    button.addClass('active');\\n\\n    // Show corresponding content\\n    if (tabName === 'chat') {\\n      this.chatEl.addClass('active');\\n    } else if (tabName === 'workflow') {\\n      this.workflowEl.addClass('active');\\n    } else if (tabName === 'analytics') {\\n      this.containerEl.querySelector('.vaultpilot-analytics-section')?.addClass('active');\\n    }\\n  }\\n\\n  private async sendChatMessage(message: string, chatHistory: HTMLElement) {\\n    // Add user message\\n    const userMessage = chatHistory.createEl('div', { cls: 'vaultpilot-chat-message user' });\\n    userMessage.createEl('div', { text: message });\\n\\n    // Add thinking indicator\\n    const thinkingMessage = chatHistory.createEl('div', { cls: 'vaultpilot-chat-message assistant thinking' });\\n    thinkingMessage.createEl('div', { text: 'Thinking...' });\\n\\n    // Scroll to bottom\\n    chatHistory.scrollTop = chatHistory.scrollHeight;\\n\\n    try {\\n      const response = await this.plugin.apiClient.sendChat({ message, context: null });\\n      \\n      // Remove thinking indicator\\n      thinkingMessage.remove();\\n      \\n      if (response.success && response.data) {\\n        const assistantMessage = chatHistory.createEl('div', { cls: 'vaultpilot-chat-message assistant' });\\n        assistantMessage.createEl('div', { text: response.data.response });\\n      } else {\\n        const errorMessage = chatHistory.createEl('div', { cls: 'vaultpilot-chat-message error' });\\n        errorMessage.createEl('div', { text: 'Error: Could not get response from AI' });\\n      }\\n    } catch (error) {\\n      // Remove thinking indicator\\n      thinkingMessage.remove();\\n      \\n      const errorMessage = chatHistory.createEl('div', { cls: 'vaultpilot-chat-message error' });\\n      errorMessage.createEl('div', { text: 'Error: Connection failed' });\\n    }\\n\\n    // Scroll to bottom\\n    chatHistory.scrollTop = chatHistory.scrollHeight;\\n  }\\n\\n  private async runWorkflow(workflowName: string) {\\n    new Notice(`Running workflow: ${workflowName}`);\\n    \\n    try {\\n      // Map workflow names to appropriate actions\\n      switch (workflowName) {\\n        case 'Analyze Vault':\\n          await this.plugin.analyzeVault();\\n          break;\\n        case 'Daily Planning':\\n          await this.plugin.planMyDay();\\n          break;\\n        default:\\n          // For now, show a placeholder\\n          new Notice(`${workflowName} workflow is coming soon!`);\\n      }\\n    } catch (error) {\\n      new Notice(`Error running workflow: ${workflowName}`);\\n    }\\n  }\\n\\n  private updateStatus() {\\n    this.statusEl.empty();\\n    this.statusEl.createEl('h3', { text: 'Connection Status' });\\n\\n    const statusContainer = this.statusEl.createEl('div', { cls: 'vaultpilot-status-container' });\\n\\n    // Backend status\\n    const backendStatus = statusContainer.createEl('div', { cls: 'vaultpilot-status-item' });\\n    backendStatus.createEl('span', { text: 'Backend: ' });\\n    const backendIndicator = backendStatus.createEl('span', { \\n      cls: 'vaultpilot-status-indicator',\\n      text: 'Checking...'\\n    });\\n\\n    // WebSocket status\\n    const wsStatus = statusContainer.createEl('div', { cls: 'vaultpilot-status-item' });\\n    wsStatus.createEl('span', { text: 'WebSocket: ' });\\n    const wsIndicator = wsStatus.createEl('span', { \\n      cls: 'vaultpilot-status-indicator',\\n      text: this.plugin.isWebSocketConnected() ? '🟢 Connected' : '🔴 Disconnected'\\n    });\\n\\n    // Check backend status\\n    this.checkBackendStatus(backendIndicator);\\n  }\\n\\n  private async checkBackendStatus(indicator: HTMLElement) {\\n    try {\\n      let response = await this.plugin.apiClient.healthCheck();\\n      \\n      if (!response.success && response.error?.includes('400')) {\\n        const simpleResponse = await this.plugin.apiClient.simpleHealthCheck();\\n        if (simpleResponse.success && simpleResponse.data) {\\n          response = {\\n            success: true,\\n            data: { status: simpleResponse.data.status, version: 'unknown' }\\n          };\\n        }\\n      }\\n      \\n      if (response.success) {\\n        indicator.textContent = '🟢 Connected';\\n        indicator.className = 'vaultpilot-status-indicator vaultpilot-status-connected';\\n      } else {\\n        indicator.textContent = '🔴 Error';\\n        indicator.className = 'vaultpilot-status-indicator vaultpilot-status-error';\\n      }\\n    } catch (error) {\\n      indicator.textContent = '🔴 Offline';\\n      indicator.className = 'vaultpilot-status-indicator vaultpilot-status-offline';\\n    }\\n  }\\n\\n  private createQuickActions() {\\n    this.quickActionsEl.empty();\\n    this.quickActionsEl.createEl('h3', { text: 'Quick Actions' });\\n\\n    const actionsGrid = this.quickActionsEl.createEl('div', { cls: 'vaultpilot-actions-grid' });\\n\\n    // Refresh button\\n    const refreshButton = actionsGrid.createEl('button', {\\n      text: '🔄 Refresh',\\n      cls: 'vaultpilot-action-button'\\n    });\\n    refreshButton.onclick = () => {\\n      this.updateStatus();\\n      this.updateVaultStats();\\n    };\\n\\n    // Open sidebar view\\n    const sidebarButton = actionsGrid.createEl('button', {\\n      text: '📋 Sidebar View',\\n      cls: 'vaultpilot-action-button'\\n    });\\n    sidebarButton.onclick = () => this.plugin.activateView();\\n\\n    // Open modal chat\\n    const modalChatButton = actionsGrid.createEl('button', {\\n      text: '💬 Modal Chat',\\n      cls: 'vaultpilot-action-button'\\n    });\\n    modalChatButton.onclick = () => this.plugin.openChatModal();\\n\\n    // Execute workflow\\n    const workflowButton = actionsGrid.createEl('button', {\\n      text: '⚙️ Workflows',\\n      cls: 'vaultpilot-action-button'\\n    });\\n    workflowButton.onclick = () => this.plugin.openWorkflowModal();\\n  }\\n\\n  private updateVaultStats() {\\n    this.vaultStatsEl.empty();\\n    this.vaultStatsEl.createEl('h3', { text: 'Vault Statistics' });\\n\\n    const statsContainer = this.vaultStatsEl.createEl('div', { cls: 'vaultpilot-stats-container' });\\n\\n    // Get vault statistics\\n    const files = this.app.vault.getFiles();\\n    const markdownFiles = this.app.vault.getMarkdownFiles();\\n    \\n    const stats = [\\n      { label: 'Total Files', value: files.length.toString() },\\n      { label: 'Markdown Files', value: markdownFiles.length.toString() },\\n      { label: 'Folders', value: this.app.vault.getAllLoadedFiles().filter(f => f instanceof TFolder).length.toString() }\\n    ];\\n\\n    stats.forEach(stat => {\\n      const statEl = statsContainer.createEl('div', { cls: 'vaultpilot-stat-item' });\\n      statEl.createEl('div', { text: stat.value, cls: 'vaultpilot-stat-value' });\\n      statEl.createEl('div', { text: stat.label, cls: 'vaultpilot-stat-label' });\\n    });\\n  }\\n\\n  private updateRecentFiles(container: HTMLElement) {\\n    const recentFiles = this.app.vault.getMarkdownFiles()\\n      .sort((a, b) => b.stat.mtime - a.stat.mtime)\\n      .slice(0, 5);\\n\\n    recentFiles.forEach(file => {\\n      const fileEl = container.createEl('div', { cls: 'vaultpilot-recent-file' });\\n      fileEl.createEl('span', { text: file.basename });\\n      fileEl.onclick = () => {\\n        this.app.workspace.openLinkText(file.path, '', false);\\n      };\\n    });\\n  }\\n\\n  private updateAgentStatus(container: HTMLElement) {\\n    this.loadAgentInfo(container);\\n  }\\n\\n  private async loadAgentInfo(container?: HTMLElement) {\\n    try {\\n      console.log('VaultPilot: Loading agents in full-tab-view...');\\n      const response = await this.plugin.apiClient.getAgents();\\n      console.log('VaultPilot: getAgents response in full-tab-view:', response);\\n      \\n      if (response.success && response.data && container) {\\n        let agents: any[] = [];\\n        \\n        // Handle different response formats\\n        if (Array.isArray(response.data)) {\\n          // Direct array response\\n          agents = response.data;\\n        } else if (response.data && typeof response.data === 'object') {\\n          // Check for wrapped response formats\\n          const dataObj = response.data as any;\\n          if (dataObj.agents && Array.isArray(dataObj.agents)) {\\n            // Response format: {agents: [...]}\\n            agents = dataObj.agents;\\n            console.log('VaultPilot: Found agents array in full-tab-view, using response.data.agents');\\n          } else if (dataObj.data && Array.isArray(dataObj.data)) {\\n            // Response format: {data: [...]}\\n            agents = dataObj.data;\\n            console.log('VaultPilot: Found nested data in full-tab-view, using response.data.data');\\n          } else {\\n            console.warn('VaultPilot: Unexpected response format:', typeof response.data, response.data);\\n          }\\n        }\\n        \\n        // Display agent information\\n        const agentCount = agents.length;\\n        const activeAgents = agents.filter((agent: any) => agent.active).length;\\n        \\n        const agentInfo = container.createEl('div', { cls: 'vaultpilot-agent-info' });\\n        agentInfo.createEl('div', { text: `${activeAgents}/${agentCount} active` });\\n        \\n        agents.forEach((agent: any) => {\\n          const agentEl = agentInfo.createEl('div', { cls: 'vaultpilot-agent-item' });\\n          agentEl.createEl('span', { text: agent.name });\\n          agentEl.createEl('span', { \\n            text: agent.active ? '🟢' : '🔴',\\n            cls: 'vaultpilot-agent-status'\\n          });\\n        });\\n      }\\n    } catch (error) {\\n      console.error('Failed to load agents in full tab view:', error);\\n    }\\n  }\\n\\n  private createActivityFeed(container: HTMLElement) {\\n    const activities = [\\n      { time: 'Just now', activity: 'VaultPilot started' },\\n      { time: '5 min ago', activity: 'Connection established' },\\n      { time: '1 hour ago', activity: 'Last vault analysis' }\\n    ];\\n\\n    activities.forEach(activity => {\\n      const activityEl = container.createEl('div', { cls: 'vaultpilot-activity-item' });\\n      activityEl.createEl('div', { text: activity.activity });\\n      activityEl.createEl('div', { text: activity.time, cls: 'vaultpilot-activity-time' });\\n    });\\n  }\\n\\n  private addFullTabStyles() {\\n    if (!document.getElementById('vaultpilot-full-tab-styles')) {\\n      const styleEl = document.createElement('style');\\n      styleEl.id = 'vaultpilot-full-tab-styles';\\n      styleEl.textContent = `\\n        .vaultpilot-full-tab-view {\\n          height: 100%;\\n          display: flex;\\n          flex-direction: column;\\n        }\\n        .vaultpilot-main-layout {\\n          display: flex;\\n          height: 100%;\\n          gap: 1px;\\n          background: var(--background-modifier-border);\\n        }\\n        .vaultpilot-left-sidebar {\\n          width: 250px;\\n          background: var(--background-primary);\\n          padding: 16px;\\n          overflow-y: auto;\\n        }\\n        .vaultpilot-main-content {\\n          flex: 1;\\n          background: var(--background-primary);\\n          display: flex;\\n          flex-direction: column;\\n        }\\n        .vaultpilot-right-sidebar {\\n          width: 250px;\\n          background: var(--background-primary);\\n          padding: 16px;\\n          overflow-y: auto;\\n        }\\n        .vaultpilot-sidebar-header {\\n          text-align: center;\\n          margin-bottom: 20px;\\n          padding-bottom: 15px;\\n          border-bottom: 1px solid var(--background-modifier-border);\\n        }\\n        .vaultpilot-tab-nav {\\n          display: flex;\\n          background: var(--background-secondary);\\n          border-bottom: 1px solid var(--background-modifier-border);\\n        }\\n        .vaultpilot-tab-button {\\n          flex: 1;\\n          padding: 12px 16px;\\n          background: transparent;\\n          border: none;\\n          color: var(--text-muted);\\n          cursor: pointer;\\n          transition: all 0.2s;\\n        }\\n        .vaultpilot-tab-button:hover {\\n          background: var(--background-modifier-hover);\\n        }\\n        .vaultpilot-tab-button.active {\\n          background: var(--background-primary);\\n          color: var(--text-normal);\\n          border-bottom: 2px solid var(--interactive-accent);\\n        }\\n        .vaultpilot-tab-content {\\n          flex: 1;\\n          overflow: hidden;\\n          position: relative;\\n        }\\n        .vaultpilot-chat-section,\\n        .vaultpilot-workflow-section,\\n        .vaultpilot-analytics-section {\\n          height: 100%;\\n          padding: 16px;\\n          display: none;\\n          overflow-y: auto;\\n          position: absolute;\\n          top: 0;\\n          left: 0;\\n          right: 0;\\n          bottom: 0;\\n        }\\n        .vaultpilot-chat-section.active,\\n        .vaultpilot-workflow-section.active,\\n        .vaultpilot-analytics-section.active {\\n          display: flex;\\n          flex-direction: column;\\n        }\\n        .vaultpilot-chat-history {\\n          flex: 1;\\n          overflow-y: auto;\\n          border: 1px solid var(--background-modifier-border);\\n          border-radius: 8px;\\n          padding: 16px;\\n          margin-bottom: 16px;\\n          background: var(--background-secondary);\\n        }\\n        .vaultpilot-chat-input {\\n          display: flex;\\n          gap: 8px;\\n        }\\n        .vaultpilot-chat-textarea {\\n          flex: 1;\\n          min-height: 60px;\\n          padding: 8px;\\n          border: 1px solid var(--background-modifier-border);\\n          border-radius: 6px;\\n          background: var(--background-primary);\\n          color: var(--text-normal);\\n          resize: vertical;\\n        }\\n        .vaultpilot-chat-send-button {\\n          padding: 8px 16px;\\n          background: var(--interactive-accent);\\n          color: var(--text-on-accent);\\n          border: none;\\n          border-radius: 6px;\\n          cursor: pointer;\\n          height: fit-content;\\n          align-self: flex-end;\\n        }\\n        .vaultpilot-chat-message {\\n          margin-bottom: 12px;\\n          padding: 8px 12px;\\n          border-radius: 8px;\\n          max-width: 80%;\\n        }\\n        .vaultpilot-chat-message.user {\\n          background: var(--interactive-accent);\\n          color: var(--text-on-accent);\\n          margin-left: auto;\\n        }\\n        .vaultpilot-chat-message.assistant {\\n          background: var(--background-primary);\\n          border: 1px solid var(--background-modifier-border);\\n        }\\n        .vaultpilot-chat-message.thinking {\\n          opacity: 0.7;\\n          font-style: italic;\\n        }\\n        .vaultpilot-chat-message.error {\\n          background: var(--background-modifier-error);\\n          color: var(--text-error);\\n        }\\n        .vaultpilot-workflow-section,\\n        .vaultpilot-analytics-section {\\n          gap: 16px;\\n        }\\n        .vaultpilot-workflow-header,\\n        .vaultpilot-analytics-header {\\n          flex-shrink: 0;\\n        }\\n        .vaultpilot-workflow-container,\\n        .vaultpilot-charts-container {\\n          flex: 1;\\n          overflow-y: auto;\\n        }\\n        .vaultpilot-workflow-grid {\\n          display: grid;\\n          grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\\n          gap: 16px;\\n          align-content: start;\\n        }\\n        .vaultpilot-workflow-card {\\n          background: var(--background-secondary);\\n          border: 1px solid var(--background-modifier-border);\\n          border-radius: 8px;\\n          padding: 16px;\\n          text-align: center;\\n        }\\n        .vaultpilot-workflow-icon {\\n          font-size: 32px;\\n          margin-bottom: 8px;\\n        }\\n        .vaultpilot-workflow-run-button {\\n          margin-top: 8px;\\n          padding: 6px 12px;\\n          background: var(--interactive-accent);\\n          color: var(--text-on-accent);\\n          border: none;\\n          border-radius: 4px;\\n          cursor: pointer;\\n        }\\n        .vaultpilot-charts-container {\\n          display: grid;\\n          grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\\n          gap: 16px;\\n          align-content: start;\\n        }\\n        .vaultpilot-chart-card {\\n          background: var(--background-secondary);\\n          border: 1px solid var(--background-modifier-border);\\n          border-radius: 8px;\\n          padding: 16px;\\n        }\\n        .vaultpilot-chart-placeholder {\\n          text-align: center;\\n          color: var(--text-muted);\\n          font-style: italic;\\n          padding: 40px;\\n        }\\n        .vaultpilot-recent-file {\\n          padding: 4px 8px;\\n          margin-bottom: 4px;\\n          border-radius: 4px;\\n          cursor: pointer;\\n          transition: background-color 0.2s;\\n        }\\n        .vaultpilot-recent-file:hover {\\n          background: var(--background-modifier-hover);\\n        }\\n        .vaultpilot-agent-item {\\n          display: flex;\\n          justify-content: space-between;\\n          align-items: center;\\n          padding: 4px 0;\\n        }\\n        .vaultpilot-activity-item {\\n          margin-bottom: 8px;\\n          padding: 6px 0;\\n          border-bottom: 1px solid var(--background-modifier-border);\\n        }\\n        .vaultpilot-activity-time {\\n          font-size: 11px;\\n          color: var(--text-muted);\\n          margin-top: 2px;\\n        }\\n        /* Inherit styles from original view */\\n        .vaultpilot-status,\\n        .vaultpilot-quick-actions,\\n        .vaultpilot-vault-stats {\\n          margin-bottom: 20px;\\n        }\\n        .vaultpilot-status h3,\\n        .vaultpilot-quick-actions h3,\\n        .vaultpilot-vault-stats h3 {\\n          margin-bottom: 12px;\\n          color: var(--text-normal);\\n          border-bottom: 1px solid var(--background-modifier-border);\\n          padding-bottom: 4px;\\n          font-size: 14px;\\n        }\\n        .vaultpilot-status-container {\\n          display: flex;\\n          flex-direction: column;\\n          gap: 6px;\\n        }\\n        .vaultpilot-status-item {\\n          display: flex;\\n          justify-content: space-between;\\n          align-items: center;\\n          font-size: 12px;\\n        }\\n        .vaultpilot-status-indicator {\\n          font-weight: 500;\\n          font-size: 11px;\\n        }\\n        .vaultpilot-status-connected {\\n          color: var(--color-green);\\n        }\\n        .vaultpilot-status-error,\\n        .vaultpilot-status-offline {\\n          color: var(--color-red);\\n        }\\n        .vaultpilot-actions-grid {\\n          display: grid;\\n          grid-template-columns: 1fr 1fr;\\n          gap: 8px;\\n        }\\n        .vaultpilot-action-button {\\n          padding: 8px 6px;\\n          background: var(--interactive-normal);\\n          border: 1px solid var(--background-modifier-border);\\n          border-radius: 4px;\\n          color: var(--text-normal);\\n          cursor: pointer;\\n          font-size: 11px;\\n          transition: background-color 0.2s;\\n        }\\n        .vaultpilot-action-button:hover {\\n          background: var(--interactive-hover);\\n        }\\n        .vaultpilot-stats-container {\\n          display: grid;\\n          grid-template-columns: 1fr;\\n          gap: 8px;\\n        }\\n        .vaultpilot-stat-item {\\n          text-align: center;\\n          padding: 8px;\\n          background: var(--background-secondary);\\n          border-radius: 4px;\\n          border: 1px solid var(--background-modifier-border);\\n        }\\n        .vaultpilot-stat-value {\\n          font-size: 18px;\\n          font-weight: bold;\\n          color: var(--text-accent);\\n          margin-bottom: 2px;\\n        }\\n        .vaultpilot-stat-label {\\n          font-size: 10px;\\n          color: var(--text-muted);\\n        }\\n      `;\\n      document.head.appendChild(styleEl);\\n    }\\n  }\\n\\n  async onClose() {\\n    // Clean up any resources\\n  }\\n}\\n\"]}"}
