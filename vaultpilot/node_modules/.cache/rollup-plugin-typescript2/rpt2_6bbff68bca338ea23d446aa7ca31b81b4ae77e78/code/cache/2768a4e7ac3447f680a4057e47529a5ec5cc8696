{"code":"import { __awaiter } from \"tslib\";\nimport { ItemView, Notice, MarkdownView, TFolder } from 'obsidian';\nexport const VIEW_TYPE_VAULTPILOT = 'vaultpilot-view';\nexport class VaultPilotView extends ItemView {\n    constructor(leaf, plugin) {\n        super(leaf);\n        this.plugin = plugin;\n    }\n    getViewType() {\n        return VIEW_TYPE_VAULTPILOT;\n    }\n    getDisplayText() {\n        return 'VaultPilot';\n    }\n    getIcon() {\n        return 'bot';\n    }\n    onOpen() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const container = this.containerEl;\n            container.empty();\n            container.addClass('vaultpilot-view');\n            // Header\n            const headerEl = container.createEl('div', { cls: 'vaultpilot-header' });\n            headerEl.createEl('h2', { text: '🤖 VaultPilot' });\n            headerEl.createEl('p', {\n                text: 'Your AI assistant for Obsidian',\n                cls: 'vaultpilot-subtitle'\n            });\n            // Status section\n            this.statusEl = container.createEl('div', { cls: 'vaultpilot-status' });\n            this.updateStatus();\n            // Quick actions\n            this.quickActionsEl = container.createEl('div', { cls: 'vaultpilot-quick-actions' });\n            this.createQuickActions();\n            // Vault stats\n            this.vaultStatsEl = container.createEl('div', { cls: 'vaultpilot-vault-stats' });\n            this.updateVaultStats();\n            // Recent activities (placeholder for future implementation)\n            const activitiesEl = container.createEl('div', { cls: 'vaultpilot-activities' });\n            activitiesEl.createEl('h3', { text: 'Recent Activities' });\n            activitiesEl.createEl('p', {\n                text: 'Activity tracking coming soon...',\n                cls: 'vaultpilot-placeholder'\n            });\n            this.addStyles();\n        });\n    }\n    updateStatus() {\n        this.statusEl.empty();\n        this.statusEl.createEl('h3', { text: 'Connection Status' });\n        const statusContainer = this.statusEl.createEl('div', { cls: 'vaultpilot-status-container' });\n        // Backend status\n        const backendStatus = statusContainer.createEl('div', { cls: 'vaultpilot-status-item' });\n        backendStatus.createEl('span', { text: 'Backend: ' });\n        const backendIndicator = backendStatus.createEl('span', {\n            cls: 'vaultpilot-status-indicator',\n            text: 'Checking...'\n        });\n        // WebSocket status\n        const wsStatus = statusContainer.createEl('div', { cls: 'vaultpilot-status-item' });\n        wsStatus.createEl('span', { text: 'WebSocket: ' });\n        const wsIndicator = wsStatus.createEl('span', {\n            cls: 'vaultpilot-status-indicator',\n            text: this.plugin.isWebSocketConnected() ? '🟢 Connected' : '🔴 Disconnected'\n        });\n        // Check backend status\n        this.checkBackendStatus(backendIndicator);\n    }\n    checkBackendStatus(indicator) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const response = yield this.plugin.apiClient.healthCheck();\n                if (response.success) {\n                    indicator.textContent = '🟢 Connected';\n                    indicator.className = 'vaultpilot-status-indicator vaultpilot-status-connected';\n                }\n                else {\n                    indicator.textContent = '🔴 Error';\n                    indicator.className = 'vaultpilot-status-indicator vaultpilot-status-error';\n                }\n            }\n            catch (error) {\n                indicator.textContent = '🔴 Offline';\n                indicator.className = 'vaultpilot-status-indicator vaultpilot-status-offline';\n            }\n        });\n    }\n    createQuickActions() {\n        this.quickActionsEl.empty();\n        this.quickActionsEl.createEl('h3', { text: 'Quick Actions' });\n        const actionsGrid = this.quickActionsEl.createEl('div', { cls: 'vaultpilot-actions-grid' });\n        // Chat action\n        const chatButton = actionsGrid.createEl('button', {\n            text: '💬 Open Chat',\n            cls: 'vaultpilot-action-button'\n        });\n        chatButton.onclick = () => this.plugin.openChatModal();\n        // Workflow action\n        const workflowButton = actionsGrid.createEl('button', {\n            text: '⚙️ Execute Workflow',\n            cls: 'vaultpilot-action-button'\n        });\n        workflowButton.onclick = () => this.plugin.openWorkflowModal();\n        // Analyze vault action\n        const analyzeButton = actionsGrid.createEl('button', {\n            text: '🔍 Analyze Vault',\n            cls: 'vaultpilot-action-button'\n        });\n        analyzeButton.onclick = () => this.plugin.analyzeVault();\n        // Copilot action\n        const copilotButton = actionsGrid.createEl('button', {\n            text: '✨ Get Completion',\n            cls: 'vaultpilot-action-button'\n        });\n        copilotButton.onclick = () => {\n            const activeView = this.app.workspace.getActiveViewOfType(MarkdownView);\n            if (activeView) {\n                this.plugin.getCopilotCompletion(activeView.editor);\n            }\n            else {\n                new Notice('No active editor found');\n            }\n        };\n        // Refresh button\n        const refreshButton = this.quickActionsEl.createEl('button', {\n            text: '🔄 Refresh Status',\n            cls: 'vaultpilot-refresh-button'\n        });\n        refreshButton.onclick = () => {\n            this.updateStatus();\n            this.updateVaultStats();\n        };\n    }\n    updateVaultStats() {\n        this.vaultStatsEl.empty();\n        this.vaultStatsEl.createEl('h3', { text: 'Vault Statistics' });\n        const statsContainer = this.vaultStatsEl.createEl('div', { cls: 'vaultpilot-stats-container' });\n        // Get vault statistics\n        const files = this.app.vault.getFiles();\n        const markdownFiles = this.app.vault.getMarkdownFiles();\n        const stats = [\n            { label: 'Total Files', value: files.length.toString() },\n            { label: 'Markdown Files', value: markdownFiles.length.toString() },\n            { label: 'Folders', value: this.app.vault.getAllLoadedFiles().filter(f => f instanceof TFolder).length.toString() }\n        ];\n        stats.forEach(stat => {\n            const statEl = statsContainer.createEl('div', { cls: 'vaultpilot-stat-item' });\n            statEl.createEl('div', { text: stat.value, cls: 'vaultpilot-stat-value' });\n            statEl.createEl('div', { text: stat.label, cls: 'vaultpilot-stat-label' });\n        });\n        // Add agent info if available\n        this.loadAgentInfo();\n    }\n    loadAgentInfo() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const response = yield this.plugin.apiClient.getAgents();\n                if (response.success && response.data) {\n                    const agentCount = response.data.length;\n                    const activeAgents = response.data.filter((agent) => agent.active).length;\n                    const agentStatsEl = this.vaultStatsEl.createEl('div', { cls: 'vaultpilot-agent-stats' });\n                    agentStatsEl.createEl('h4', { text: 'Available Agents' });\n                    const agentInfo = agentStatsEl.createEl('div', { cls: 'vaultpilot-agent-info' });\n                    agentInfo.createEl('span', { text: `${activeAgents}/${agentCount} active` });\n                }\n            }\n            catch (error) {\n                // Silently fail if agents can't be loaded\n            }\n        });\n    }\n    addStyles() {\n        if (!document.getElementById('vaultpilot-view-styles')) {\n            const styleEl = document.createElement('style');\n            styleEl.id = 'vaultpilot-view-styles';\n            styleEl.textContent = `\n        .vaultpilot-view {\n          padding: 20px;\n        }\n        .vaultpilot-header {\n          text-align: center;\n          margin-bottom: 30px;\n          padding-bottom: 15px;\n          border-bottom: 1px solid var(--background-modifier-border);\n        }\n        .vaultpilot-subtitle {\n          color: var(--text-muted);\n          margin-top: 5px;\n        }\n        .vaultpilot-status,\n        .vaultpilot-quick-actions,\n        .vaultpilot-vault-stats,\n        .vaultpilot-activities {\n          margin-bottom: 25px;\n        }\n        .vaultpilot-status h3,\n        .vaultpilot-quick-actions h3,\n        .vaultpilot-vault-stats h3,\n        .vaultpilot-activities h3 {\n          margin-bottom: 15px;\n          color: var(--text-normal);\n          border-bottom: 1px solid var(--background-modifier-border);\n          padding-bottom: 5px;\n        }\n        .vaultpilot-status-container {\n          display: flex;\n          flex-direction: column;\n          gap: 8px;\n        }\n        .vaultpilot-status-item {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n        }\n        .vaultpilot-status-indicator {\n          font-weight: 500;\n        }\n        .vaultpilot-status-connected {\n          color: var(--color-green);\n        }\n        .vaultpilot-status-error,\n        .vaultpilot-status-offline {\n          color: var(--color-red);\n        }\n        .vaultpilot-actions-grid {\n          display: grid;\n          grid-template-columns: 1fr 1fr;\n          gap: 10px;\n          margin-bottom: 15px;\n        }\n        .vaultpilot-action-button {\n          padding: 12px 8px;\n          background: var(--interactive-normal);\n          border: 1px solid var(--background-modifier-border);\n          border-radius: 6px;\n          color: var(--text-normal);\n          cursor: pointer;\n          font-size: 13px;\n          transition: background-color 0.2s;\n        }\n        .vaultpilot-action-button:hover {\n          background: var(--interactive-hover);\n        }\n        .vaultpilot-refresh-button {\n          width: 100%;\n          padding: 8px;\n          background: var(--interactive-accent);\n          color: var(--text-on-accent);\n          border: none;\n          border-radius: 6px;\n          cursor: pointer;\n          font-size: 12px;\n        }\n        .vaultpilot-stats-container {\n          display: grid;\n          grid-template-columns: repeat(3, 1fr);\n          gap: 15px;\n        }\n        .vaultpilot-stat-item {\n          text-align: center;\n          padding: 15px;\n          background: var(--background-secondary);\n          border-radius: 8px;\n          border: 1px solid var(--background-modifier-border);\n        }\n        .vaultpilot-stat-value {\n          font-size: 24px;\n          font-weight: bold;\n          color: var(--text-accent);\n          margin-bottom: 5px;\n        }\n        .vaultpilot-stat-label {\n          font-size: 12px;\n          color: var(--text-muted);\n        }\n        .vaultpilot-agent-stats {\n          margin-top: 15px;\n          padding: 10px;\n          background: var(--background-primary-alt);\n          border-radius: 6px;\n          border: 1px solid var(--background-modifier-border);\n        }\n        .vaultpilot-agent-stats h4 {\n          margin: 0 0 8px 0;\n          font-size: 14px;\n        }\n        .vaultpilot-agent-info {\n          font-size: 12px;\n          color: var(--text-muted);\n        }\n        .vaultpilot-placeholder {\n          color: var(--text-muted);\n          font-style: italic;\n          text-align: center;\n          padding: 20px;\n        }\n      `;\n            document.head.appendChild(styleEl);\n        }\n    }\n    onClose() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Clean up any resources\n        });\n    }\n}\n//# sourceMappingURL=view.js.map","references":["/Users/malachiledbetter/Documents/GitHub/VaultPilot/vaultpilot/node_modules/obsidian/obsidian.d.ts","/Users/malachiledbetter/Documents/GitHub/VaultPilot/vaultpilot/src/main.ts"],"map":"{\"version\":3,\"file\":\"view.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/view.ts\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"import { ItemView, WorkspaceLeaf, Notice, MarkdownView, TFolder } from 'obsidian';\\nimport type VaultPilotPlugin from './main';\\n\\nexport const VIEW_TYPE_VAULTPILOT = 'vaultpilot-view';\\n\\nexport class VaultPilotView extends ItemView {\\n  plugin: VaultPilotPlugin;\\n  private statusEl!: HTMLElement;\\n  private quickActionsEl!: HTMLElement;\\n  private vaultStatsEl!: HTMLElement;\\n\\n  constructor(leaf: WorkspaceLeaf, plugin: VaultPilotPlugin) {\\n    super(leaf);\\n    this.plugin = plugin;\\n  }\\n\\n  getViewType(): string {\\n    return VIEW_TYPE_VAULTPILOT;\\n  }\\n\\n  getDisplayText(): string {\\n    return 'VaultPilot';\\n  }\\n\\n  getIcon(): string {\\n    return 'bot';\\n  }\\n\\n  async onOpen() {\\n    const container = this.containerEl;\\n    container.empty();\\n    container.addClass('vaultpilot-view');\\n\\n    // Header\\n    const headerEl = container.createEl('div', { cls: 'vaultpilot-header' });\\n    headerEl.createEl('h2', { text: '🤖 VaultPilot' });\\n    headerEl.createEl('p', { \\n      text: 'Your AI assistant for Obsidian',\\n      cls: 'vaultpilot-subtitle'\\n    });\\n\\n    // Status section\\n    this.statusEl = container.createEl('div', { cls: 'vaultpilot-status' });\\n    this.updateStatus();\\n\\n    // Quick actions\\n    this.quickActionsEl = container.createEl('div', { cls: 'vaultpilot-quick-actions' });\\n    this.createQuickActions();\\n\\n    // Vault stats\\n    this.vaultStatsEl = container.createEl('div', { cls: 'vaultpilot-vault-stats' });\\n    this.updateVaultStats();\\n\\n    // Recent activities (placeholder for future implementation)\\n    const activitiesEl = container.createEl('div', { cls: 'vaultpilot-activities' });\\n    activitiesEl.createEl('h3', { text: 'Recent Activities' });\\n    activitiesEl.createEl('p', { \\n      text: 'Activity tracking coming soon...',\\n      cls: 'vaultpilot-placeholder'\\n    });\\n\\n    this.addStyles();\\n  }\\n\\n  private updateStatus() {\\n    this.statusEl.empty();\\n    this.statusEl.createEl('h3', { text: 'Connection Status' });\\n\\n    const statusContainer = this.statusEl.createEl('div', { cls: 'vaultpilot-status-container' });\\n\\n    // Backend status\\n    const backendStatus = statusContainer.createEl('div', { cls: 'vaultpilot-status-item' });\\n    backendStatus.createEl('span', { text: 'Backend: ' });\\n    const backendIndicator = backendStatus.createEl('span', { \\n      cls: 'vaultpilot-status-indicator',\\n      text: 'Checking...'\\n    });\\n\\n    // WebSocket status\\n    const wsStatus = statusContainer.createEl('div', { cls: 'vaultpilot-status-item' });\\n    wsStatus.createEl('span', { text: 'WebSocket: ' });\\n    const wsIndicator = wsStatus.createEl('span', { \\n      cls: 'vaultpilot-status-indicator',\\n      text: this.plugin.isWebSocketConnected() ? '🟢 Connected' : '🔴 Disconnected'\\n    });\\n\\n    // Check backend status\\n    this.checkBackendStatus(backendIndicator);\\n  }\\n\\n  private async checkBackendStatus(indicator: HTMLElement) {\\n    try {\\n      const response = await this.plugin.apiClient.healthCheck();\\n      if (response.success) {\\n        indicator.textContent = '🟢 Connected';\\n        indicator.className = 'vaultpilot-status-indicator vaultpilot-status-connected';\\n      } else {\\n        indicator.textContent = '🔴 Error';\\n        indicator.className = 'vaultpilot-status-indicator vaultpilot-status-error';\\n      }\\n    } catch (error) {\\n      indicator.textContent = '🔴 Offline';\\n      indicator.className = 'vaultpilot-status-indicator vaultpilot-status-offline';\\n    }\\n  }\\n\\n  private createQuickActions() {\\n    this.quickActionsEl.empty();\\n    this.quickActionsEl.createEl('h3', { text: 'Quick Actions' });\\n\\n    const actionsGrid = this.quickActionsEl.createEl('div', { cls: 'vaultpilot-actions-grid' });\\n\\n    // Chat action\\n    const chatButton = actionsGrid.createEl('button', {\\n      text: '💬 Open Chat',\\n      cls: 'vaultpilot-action-button'\\n    });\\n    chatButton.onclick = () => this.plugin.openChatModal();\\n\\n    // Workflow action\\n    const workflowButton = actionsGrid.createEl('button', {\\n      text: '⚙️ Execute Workflow',\\n      cls: 'vaultpilot-action-button'\\n    });\\n    workflowButton.onclick = () => this.plugin.openWorkflowModal();\\n\\n    // Analyze vault action\\n    const analyzeButton = actionsGrid.createEl('button', {\\n      text: '🔍 Analyze Vault',\\n      cls: 'vaultpilot-action-button'\\n    });\\n    analyzeButton.onclick = () => this.plugin.analyzeVault();\\n\\n    // Copilot action\\n    const copilotButton = actionsGrid.createEl('button', {\\n      text: '✨ Get Completion',\\n      cls: 'vaultpilot-action-button'\\n    });\\n    copilotButton.onclick = () => {\\n      const activeView = this.app.workspace.getActiveViewOfType(MarkdownView);\\n      if (activeView) {\\n        this.plugin.getCopilotCompletion(activeView.editor);\\n      } else {\\n        new Notice('No active editor found');\\n      }\\n    };\\n\\n    // Refresh button\\n    const refreshButton = this.quickActionsEl.createEl('button', {\\n      text: '🔄 Refresh Status',\\n      cls: 'vaultpilot-refresh-button'\\n    });\\n    refreshButton.onclick = () => {\\n      this.updateStatus();\\n      this.updateVaultStats();\\n    };\\n  }\\n\\n  private updateVaultStats() {\\n    this.vaultStatsEl.empty();\\n    this.vaultStatsEl.createEl('h3', { text: 'Vault Statistics' });\\n\\n    const statsContainer = this.vaultStatsEl.createEl('div', { cls: 'vaultpilot-stats-container' });\\n\\n    // Get vault statistics\\n    const files = this.app.vault.getFiles();\\n    const markdownFiles = this.app.vault.getMarkdownFiles();\\n    \\n    const stats = [\\n      { label: 'Total Files', value: files.length.toString() },\\n      { label: 'Markdown Files', value: markdownFiles.length.toString() },\\n      { label: 'Folders', value: this.app.vault.getAllLoadedFiles().filter(f => f instanceof TFolder).length.toString() }\\n    ];\\n\\n    stats.forEach(stat => {\\n      const statEl = statsContainer.createEl('div', { cls: 'vaultpilot-stat-item' });\\n      statEl.createEl('div', { text: stat.value, cls: 'vaultpilot-stat-value' });\\n      statEl.createEl('div', { text: stat.label, cls: 'vaultpilot-stat-label' });\\n    });\\n\\n    // Add agent info if available\\n    this.loadAgentInfo();\\n  }\\n\\n  private async loadAgentInfo() {\\n    try {\\n      const response = await this.plugin.apiClient.getAgents();\\n      if (response.success && response.data) {\\n        const agentCount = response.data.length;\\n        const activeAgents = response.data.filter((agent: any) => agent.active).length;\\n        \\n        const agentStatsEl = this.vaultStatsEl.createEl('div', { cls: 'vaultpilot-agent-stats' });\\n        agentStatsEl.createEl('h4', { text: 'Available Agents' });\\n        \\n        const agentInfo = agentStatsEl.createEl('div', { cls: 'vaultpilot-agent-info' });\\n        agentInfo.createEl('span', { text: `${activeAgents}/${agentCount} active` });\\n      }\\n    } catch (error) {\\n      // Silently fail if agents can't be loaded\\n    }\\n  }\\n\\n  private addStyles() {\\n    if (!document.getElementById('vaultpilot-view-styles')) {\\n      const styleEl = document.createElement('style');\\n      styleEl.id = 'vaultpilot-view-styles';\\n      styleEl.textContent = `\\n        .vaultpilot-view {\\n          padding: 20px;\\n        }\\n        .vaultpilot-header {\\n          text-align: center;\\n          margin-bottom: 30px;\\n          padding-bottom: 15px;\\n          border-bottom: 1px solid var(--background-modifier-border);\\n        }\\n        .vaultpilot-subtitle {\\n          color: var(--text-muted);\\n          margin-top: 5px;\\n        }\\n        .vaultpilot-status,\\n        .vaultpilot-quick-actions,\\n        .vaultpilot-vault-stats,\\n        .vaultpilot-activities {\\n          margin-bottom: 25px;\\n        }\\n        .vaultpilot-status h3,\\n        .vaultpilot-quick-actions h3,\\n        .vaultpilot-vault-stats h3,\\n        .vaultpilot-activities h3 {\\n          margin-bottom: 15px;\\n          color: var(--text-normal);\\n          border-bottom: 1px solid var(--background-modifier-border);\\n          padding-bottom: 5px;\\n        }\\n        .vaultpilot-status-container {\\n          display: flex;\\n          flex-direction: column;\\n          gap: 8px;\\n        }\\n        .vaultpilot-status-item {\\n          display: flex;\\n          justify-content: space-between;\\n          align-items: center;\\n        }\\n        .vaultpilot-status-indicator {\\n          font-weight: 500;\\n        }\\n        .vaultpilot-status-connected {\\n          color: var(--color-green);\\n        }\\n        .vaultpilot-status-error,\\n        .vaultpilot-status-offline {\\n          color: var(--color-red);\\n        }\\n        .vaultpilot-actions-grid {\\n          display: grid;\\n          grid-template-columns: 1fr 1fr;\\n          gap: 10px;\\n          margin-bottom: 15px;\\n        }\\n        .vaultpilot-action-button {\\n          padding: 12px 8px;\\n          background: var(--interactive-normal);\\n          border: 1px solid var(--background-modifier-border);\\n          border-radius: 6px;\\n          color: var(--text-normal);\\n          cursor: pointer;\\n          font-size: 13px;\\n          transition: background-color 0.2s;\\n        }\\n        .vaultpilot-action-button:hover {\\n          background: var(--interactive-hover);\\n        }\\n        .vaultpilot-refresh-button {\\n          width: 100%;\\n          padding: 8px;\\n          background: var(--interactive-accent);\\n          color: var(--text-on-accent);\\n          border: none;\\n          border-radius: 6px;\\n          cursor: pointer;\\n          font-size: 12px;\\n        }\\n        .vaultpilot-stats-container {\\n          display: grid;\\n          grid-template-columns: repeat(3, 1fr);\\n          gap: 15px;\\n        }\\n        .vaultpilot-stat-item {\\n          text-align: center;\\n          padding: 15px;\\n          background: var(--background-secondary);\\n          border-radius: 8px;\\n          border: 1px solid var(--background-modifier-border);\\n        }\\n        .vaultpilot-stat-value {\\n          font-size: 24px;\\n          font-weight: bold;\\n          color: var(--text-accent);\\n          margin-bottom: 5px;\\n        }\\n        .vaultpilot-stat-label {\\n          font-size: 12px;\\n          color: var(--text-muted);\\n        }\\n        .vaultpilot-agent-stats {\\n          margin-top: 15px;\\n          padding: 10px;\\n          background: var(--background-primary-alt);\\n          border-radius: 6px;\\n          border: 1px solid var(--background-modifier-border);\\n        }\\n        .vaultpilot-agent-stats h4 {\\n          margin: 0 0 8px 0;\\n          font-size: 14px;\\n        }\\n        .vaultpilot-agent-info {\\n          font-size: 12px;\\n          color: var(--text-muted);\\n        }\\n        .vaultpilot-placeholder {\\n          color: var(--text-muted);\\n          font-style: italic;\\n          text-align: center;\\n          padding: 20px;\\n        }\\n      `;\\n      document.head.appendChild(styleEl);\\n    }\\n  }\\n\\n  async onClose() {\\n    // Clean up any resources\\n  }\\n}\\n\"]}"}
